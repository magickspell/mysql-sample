/*
16 ОСОБЕННОСТИ РАЗНЫХ СУБД

Есть много движком SQL:
- InnoDB (используется в mysql)
высокопроизводительный, поддержка транзакций с сейвпоинтами. медленный но универсальный.
- MyISAM (Aria+)
оптимизирован под интенсивное чтение данных, но не запись. нет транзакций и внешних ключей.
- MyRocks
оптимизирует место на диске, быстро работает под нагрузкой (разработан в FACEBOOK)


MYSQL
-СУБД для веба по умолчанию
-LAMP = linux + apache + mysql + php
-хорош для старта
-можно дописывать когда сервис станет высоконагружен
-yназвания таблиц и атрибутов в кавычках `table_name`
-ключевое слово auto_increment (упрощает стандартный синтаксис из стандарта)
-нет INTERSECT, MINUS
-работа с датами и временем - CURDATE(), CURTIME()

MARIADB
- форк mysql, свободен, не oracle, чуть опаздывает по функциолналу от mysql 



ORACLE
- топ 1 СУБД для корпоратов
- экосистема для разработок прилодений и сервисов
- хорошая масштабируемость, гибкая настройка оптимизаций, ориентация на большие данные
- платная, дорогая, закрытая (может себе это позволить)
- PL/SQL (ЯП как питон, жс, плюсы и т.д.):
---- высокоуровневый ЯП с оптимизацией SQL
---- мнодество типов, структуризация кода
---- поддержка ООП
---- можно пилить веб-приложения
- IDENTYTI для auto_increment
- WHERE ROWNUM < x | FETCH FIRST x ROWS ONLY вместо LIMIT x
- SELECT * FROM a, b WHERE a.id(+)=b._id
- БОЛЬШЕ АНАЛИТИЧЕСКИХ ФУНКЦИЙ
---- CUBE
---- оптимизирована работа с оконными функциями
---- аналитический функции например NTH_VALUE, PERCENTILE_CONT, REGR_
- автоматическое создание индексов аналоизируя запросы



POSTGRESQL
- масштабируемость, гибкая но сложная настройка
- удобно работать с JSON и XML
- Вложенные транзакции с точками сохранения
- Гибкая система блокировок
- Расширения PostGIS (модуль для работы с геоданными)
- Свободный код, популярный, много расширений
- AWS RedShift (платные, обрезанный postgresql)
- explain plan - аналитика выполнения запроса
- SERIAL вместо auto_increment
- LIMIT, OFFSET (лимит отдельно, офсет отдельно)
- альтернативный синтаксиси show tables, describe table, use - нет (/c /dt)
- PL/SQL (свой ЯП)
----- можно делать пользовательские данные
----- можно писать код на python (процедур и тригеров тоже?)


MSSQL
- хорошо интегрируется с продукмтами Microsoft
- основная ниша - ифраструктура банков
- отличная производительность и аналитические функции
- разработка приложений, отчетов и т.д.
- названия таблиц в скобках [table_name]
- limit заменен на fetchfirst x ROWS only, select top (1)
- update... output... - можно вернуть данные (в постре же тоже можо лол)
- try catch
 
**/